name: "Distribution"
on:
  release:
    types: [published]

# NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".

env:
  GODOT_VERSION: 4.4.1
  EXPORT_NAME: gameLauncher
  PROJECT_PATH: .

jobs:
  nothing_left_todo:
    name: Nothing Left TODO
    env:
      REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      REPO_USERNAME: ${{ secrets.REPO_USERNAME }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Nothing left TODO
        run: .github/nothing_left_todo.sh

  export-windows:
    needs: nothing_left_todo
    name: Windows Export
    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.4.1
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Update config/version in project.godot
        run: |
          TAG_NAME=${{ github.ref_name }}
          sed -i 's/^config\/version=.*/config\/version="${TAG_NAME}"/' project.godot

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"

      - name: Compress Windows Build to Zip
        run: |
          cd build/windows
          zip -r ../GameLauncher-${{ github.ref_name }}-Windows.zip . 

      - name: Upload Artifact to Release Tag
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/GameLauncher-${{ github.ref_name }}-Windows.zip
          asset_name: GameLauncher-${{ github.ref_name }}-Windows.zip
          tag: ${{ github.ref }}
          overwrite: true

#  export-linux:
#    name: Linux Export
#    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
#    container:
#      image: barichello/godot-ci:4.4.1
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          lfs: true
#      - name: Setup
#        run: |
#          mkdir -v -p ~/.local/share/godot/export_templates/
#          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
#      - name: Linux Build
#        run: |
#          mkdir -v -p build/linux
#          EXPORT_DIR="$(readlink -f build)"
#          cd $PROJECT_PATH
#          godot --headless --verbose --export-release "Linux/X11" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: linux
#          path: build/linux
#
#  export-web:
#    name: Web Export
#    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
#    container:
#      image: barichello/godot-ci:4.4.1
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          lfs: true
#      - name: Setup
#        run: |
#          mkdir -v -p ~/.local/share/godot/export_templates/
#          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
#      - name: Web Build
#        run: |
#          mkdir -v -p build/web
#          EXPORT_DIR="$(readlink -f build)"
#          cd $PROJECT_PATH
#          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: web
#          path: build/web
#      - name: Install rsync 📚
#        run: |
#          apt-get update && apt-get install -y rsync
#      - name: Deploy to GitHub Pages 🚀
#        uses: JamesIves/github-pages-deploy-action@releases/v4
#        with:
#          branch: gh-pages # The branch the action should deploy to.
#          folder: build/web # The folder the action should deploy.
#
#  export-mac:
#    name: Mac Export
#    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
#    container:
#      image: barichello/godot-ci:4.4.1
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          lfs: true
#      - name: Setup
#        run: |
#          mkdir -v -p ~/.local/share/godot/export_templates/
#          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
#      - name: Mac Build
#        run: |
#          mkdir -v -p build/mac
#          EXPORT_DIR="$(readlink -f build)"
#          cd $PROJECT_PATH
#          godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: mac
#          path: build/mac